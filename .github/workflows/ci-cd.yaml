name: CI Pipeline

on:
  push:
    branches: ["main"]

env:
  DOCKER_IMAGE_NAME: frakenbok/tmp-test
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('pyproject.toml', 'poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          cd fastapi_app
          poetry run pytest test_main.py

  docker-build-test:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-run-integration:
    runs-on: ubuntu-latest
    needs: docker-build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Pull Docker image
        run: docker pull ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}

      - name: Run container
        run: |
          docker run -d \
            --name tmp-test-integration \
            -p 1337:1337 \
            -v $(pwd)/data:/data:rw \
            -e DB_PATH=sqlite:////data/database.db \
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          sleep 5

      - name: Run integration tests
        run: |
          python fastapi_app/test_integration.py

      - name: Cleanup
        if: always()
        run: |
          docker stop tmp-test-integration || true
          docker rm tmp-test-integration || true